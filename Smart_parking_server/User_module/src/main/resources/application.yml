server:
  port: 9003

spring:

  application:
    name: UserService

  datasource:
    url: jdbc:mysql://localhost:3306/Smart_parking_data?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: "001124"
    driver-class-name: com.mysql.cj.jdbc.Driver

    #rabbitmq相关配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password:  guest
    listener:
      simple:
        prefetch: 1   #每次只能获取一条消息，处理完才能获取下一条（提升消息处理速度，避免消息堆积）
    publisher-confirm-type: correlated   #开启publisher-confirm，支持两种类型
                                          #simple同步等待confirm结果，直到超时
                                          #correlated 异步回调，定义一个ConfirmCallBack,MQ返回结果时回调ConfirmCallBack
    publisher-returns: true       #开启publisher-returns，同样是CallBack机制，不过是定义ReturnCallBack
    template:
      mandatory: true         #定义消息路由失败时策略，true则调用ReturnCallBack，false直接丢弃消息



  redis:
    lettuce:
      pool:
        max-active: 8 #最大连接，默认
        max-idle: 8 #最大空闲连接，默认
        min-idle: 0 #最小空闲连接，默认
        max-wait: 100ms #连接等待时间

  cloud:
    nacos:
      server-addr: localhost:8848      #nacos服务地址
      #配置集群名称，可实现实例的集群属性配置
      #服务间调用默认使用轮训，优先使用相同集群的服务，若不可用，再找其他的
      discovery:
        cluster-name: ServerMaster
        ephemeral: false    #设置为非临时实例
#        namespace:    #填写命名空间id，用于做环境隔离


ribbon:
  eager-load:
    #Ribbon默认采用懒加载，，只有第一次访问时才会去创建LoadBalanceClient，请求时间很长
    #而饥饿加载则会在项目启动时自动创建，降低第一次访问的耗时
    #开启饥饿加载
    enabled: true
    #指定饥饿加载的服务名称
    clients:
      - OrderService
      - ParkingLotService
      - VehicleService


dubbo:
  application:
    name: userService
    #当前服务名字
  registry:
    address:
    #注册中心地址
    protocol:
    #注册中心协议
  protocol:
    name: dubbo
    #协议
    port: 100800

